{"version":3,"sources":["../../src/layouts/input.js"],"names":[],"mappings":"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","file":"input.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport { findDOMNode } from \"react-dom\"\r\nimport { Overlay } from \"react-overlays\"\r\nimport { mountable } from \"react-prop-types\"\r\nimport MomentPropTypes from \"react-moment-proptypes\"\r\nimport Fade from \"../components/fade.js\"\r\nimport DateTimePickerInput from \"../components/input.js\"\r\nimport DateTimePickerContainer from \"../components/container.js\"\r\nimport DateTimePickerLayoutHorizontal from \"./horizontal.js\"\r\nimport DateTimePickerLayoutVertical from \"./vertical.js\"\r\nimport { MODE_DATE } from \"../config.js\"\r\nimport moment from \"moment\"\r\n\r\nclass DateTimePickerLayoutInput extends Component {\r\n\r\n    static propTypes = {\r\n        bsSize     : React.PropTypes.string,\r\n        container  : mountable,\r\n        datePicker : React.PropTypes.node,\r\n        dateTime   : MomentPropTypes.momentObj,\r\n        debug      : React.PropTypes.bool,\r\n        icon       : React.PropTypes.bool,\r\n        icons      : React.PropTypes.object,\r\n        sideBySide : React.PropTypes.bool,\r\n        timePicker : React.PropTypes.node,\r\n        value      : React.PropTypes.string\r\n    };\r\n\r\n    static defaultProps = {\r\n        container : global.document.querySelector(\"body\")\r\n    };\r\n\r\n    state = {\r\n        show : false\r\n    };\r\n\r\n    componentWillReceiveProps (props) {\r\n        const { show } = this.state\r\n        const {\r\n            mode,\r\n            keepOpen,\r\n            dateTime,\r\n            selected\r\n        } = props\r\n\r\n        const dayChanged = moment(this.props.dateTime).date() !== moment(dateTime).date()\r\n\r\n        if (show && selected && dayChanged && !keepOpen && mode === MODE_DATE) {\r\n            this.setState({ show : false })\r\n        }\r\n    }\r\n\r\n    onClickInput = (e) => {\r\n        e.preventDefault()\r\n\r\n        this.setState({\r\n            show : !this.state.show\r\n        })\r\n    };\r\n\r\n    onHidePopup = () => {\r\n        this.setState({ show : false })\r\n    };\r\n\r\n    onClickClose = () => {\r\n        this.setState({ show : false })\r\n    };\r\n\r\n    render () {\r\n        const {\r\n            container,\r\n            debug,\r\n            sideBySide\r\n        } = this.props\r\n        const { show } = this.state\r\n        let picker\r\n\r\n        if (sideBySide) {\r\n            picker = (\r\n                <DateTimePickerLayoutHorizontal { ...this.props } />\r\n            )\r\n        } else {\r\n            picker = (\r\n                <DateTimePickerLayoutVertical { ...this.props }\r\n                                              onClickClose={ this.onClickClose } />\r\n            )\r\n        }\r\n\r\n        const target = () => findDOMNode(this.refs.input)\r\n\r\n        return (\r\n            <div style={ { position : \"relative\" } }>\r\n                <DateTimePickerInput { ...this.props }\r\n                                     show={ show }\r\n                                     ref=\"input\"                                     \r\n                                     onClick={ this.onClickInput } />\r\n                <Overlay placement=\"bottom\"\r\n                         show={ show }\r\n                         rootClose={ !debug }\r\n                         transition={ Fade }\r\n                         onHide={ this.onHidePopup }\r\n                         container={ container }\r\n                         unmountOnExit\r\n                         target={ target }>\r\n                    <DateTimePickerContainer { ...this.props }\r\n                                             target={ target }>\r\n                        { picker }\r\n                    </DateTimePickerContainer>\r\n                </Overlay>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default DateTimePickerLayoutInput\r\n"]}